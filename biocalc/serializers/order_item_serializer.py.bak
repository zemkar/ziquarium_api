
# from rest_framework.exceptions import PermissionDenied
from rest_framework import serializers
from biocalc.models import ( OrderItem )



class OrderItemSerializer(serializers.ModelSerializer):

    """
    Serializer class for serializing order items
    """
    class Meta:
        model = OrderItem
        fields = "__all__"
    
    def validate(self, validated_data):
        order_quantity = validated_data['quantity']
        product_quantity = validated_data['product'].quantity

        order_id = self.context['view'].kwargs.get('order_id')
        product = validated_data['product']
        current_item = OrderItem.objects.filter(
            order__id=order_id, product=product)

        if(order_quantity > product_quantity):
            error = {'quantity': 'Ordered quantity is more than the stock.'}
            raise serializers.ValidationError(error)

        if not self.instance and current_item.count() > 0:
            error = {'product': 'Product already exists in your order.'}
            raise serializers.ValidationError(error)

        # if self.context['request'].user == product.seller:                    # TODO useful when the possibility 
        #     error = 'Adding your own product to your order is not allowed'    # TODO of exchange-sale
        #     raise PermissionDenied(error)                                     # TODO between users is implemented

        return validated_data

    def get_price(self, obj):
        return obj.product.price

    def get_cost(self, obj):
        return obj.cost
